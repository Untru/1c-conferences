name: ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  quality-check:
    name: üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–¥
        uses: actions/checkout@v4

      - name: üêç –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üóÇÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        run: |
          python generate_nav.py
          echo "‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ"

      - name: üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å MkDocs
        run: |
          # –°–æ–±–∏—Ä–∞–µ–º —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏ (–Ω–µ —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º)
          mkdocs build --verbose
          echo "‚úÖ MkDocs —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"

      - name: üìù –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Å—ã–ª–∫–∏
        run: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
          python -c "
          import yaml
          import os
          from pathlib import Path
          
          with open('mkdocs.yml', 'r', encoding='utf-8') as f:
              config = yaml.safe_load(f)
          
          nav = config.get('nav', [])
          missing_files = []
          
          def check_nav_items(items):
              for item in items:
                  if isinstance(item, dict):
                      for key, value in item.items():
                          if isinstance(value, list):
                              check_nav_items(value)
                          elif isinstance(value, str) and ':' in value:
                              file_path = value.split(':', 1)[1].strip()
                              if not file_path.startswith('http') and not file_path.startswith('#'):
                                  if not os.path.exists(f'docs/{file_path}'):
                                      missing_files.append(file_path)
                  elif isinstance(item, str) and ':' in item:
                      file_path = item.split(':', 1)[1].strip()
                      if not file_path.startswith('http') and not file_path.startswith('#'):
                          if not os.path.exists(f'docs/{file_path}'):
                              missing_files.append(file_path)
                  elif isinstance(item, list):
                      check_nav_items(item)
          
          check_nav_items(nav)
          
          if missing_files:
              print(f'‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã: {missing_files}')
              exit(1)
          else:
              print('‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç')
          "

      - name: üéØ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ–±—ã—Ç–∏–π
        run: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
          python -c "
          import os
          from pathlib import Path
          
          events_dir = Path('docs/events')
          if not events_dir.exists():
              print('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–±—ã—Ç–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
              exit(1)
          
          for year_dir in events_dir.iterdir():
              if year_dir.is_dir() and year_dir.name.isdigit():
                  index_file = year_dir / 'index.md'
                  if not index_file.exists():
                      print(f'‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç index.md –¥–ª—è –≥–æ–¥–∞ {year_dir.name}')
                      exit(1)
                  
                  events = list(year_dir.glob('*.md'))
                  if len(events) < 2:  # index.md + —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–æ–±—ã—Ç–∏–µ
                      print(f'‚ö†Ô∏è –í –≥–æ–¥—É {year_dir.name} –º–∞–ª–æ —Å–æ–±—ã—Ç–∏–π')
          
          print('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–±—ã—Ç–∏–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞')
          "

      - name: üéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ
        run: |
          echo "üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
          echo "üìã –°–∞–π—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é"
